<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sz.zxl.com.demo.dao.UsersMapper">

	<!-- 登入查询 -->
	<select id="findUser" parameterType="sz.zxl.com.demo.pojo.Users" resultType="sz.zxl.com.demo.pojo.Users">
		select * from users where username=#{username} and userpwd=#{userpwd}
	</select>

	<resultMap id="BaseResultMap" type="sz.zxl.com.demo.pojo.Users">
		<id column="userid" property="userid" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="userpwd" property="userpwd" jdbcType="VARCHAR" />
		<result column="userage" property="userage" jdbcType="INTEGER" />
		<result column="usersex" property="usersex" jdbcType="VARCHAR" />
		<result column="usercard" property="usercard" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="userphone" property="userphone" jdbcType="VARCHAR" />
		<result column="userphoto" property="userphoto" jdbcType="VARCHAR" />
		<result column="useraddress" property="useraddress" jdbcType="VARCHAR" />
		<result column="userjob" property="userjob" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		userid, username, nickname, userpwd, userage, usersex, usercard, email,
		userphone,
		userphoto, useraddress, userjob
	</sql>
	<!-- 根据主键查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where userid = #{userid,jdbcType=INTEGER}
	</select>
	<!-- 根据主键 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where userid = #{userid,jdbcType=INTEGER}
	</delete>
	<!-- 增加全部 -->
	<insert id="insert" parameterType="sz.zxl.com.demo.pojo.Users">
		insert into users (userid, username, nickname,
		userpwd, userage, usersex,
		usercard, email, userphone,
		userphoto, useraddress, userjob
		)
		values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{userpwd,jdbcType=VARCHAR}, #{userage,jdbcType=INTEGER}, #{usersex,jdbcType=VARCHAR},
		#{usercard,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{userphone,jdbcType=VARCHAR},
		#{userphoto,jdbcType=VARCHAR}, #{useraddress,jdbcType=VARCHAR}, #{userjob,jdbcType=VARCHAR}
		)
	</insert>
	<!-- 动态增加 -->
	<insert id="insertSelective" parameterType="sz.zxl.com.demo.pojo.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userid,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="userpwd != null">
				userpwd,
			</if>
			<if test="userage != null">
				userage,
			</if>
			<if test="usersex != null">
				usersex,
			</if>
			<if test="usercard != null">
				usercard,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="userphone != null">
				userphone,
			</if>
			<if test="userphoto != null">
				userphoto,
			</if>
			<if test="useraddress != null">
				useraddress,
			</if>
			<if test="userjob != null">
				userjob,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="userpwd != null">
				#{userpwd,jdbcType=VARCHAR},
			</if>
			<if test="userage != null">
				#{userage,jdbcType=INTEGER},
			</if>
			<if test="usersex != null">
				#{usersex,jdbcType=VARCHAR},
			</if>
			<if test="usercard != null">
				#{usercard,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="userphone != null">
				#{userphone,jdbcType=VARCHAR},
			</if>
			<if test="userphoto != null">
				#{userphoto,jdbcType=VARCHAR},
			</if>
			<if test="useraddress != null">
				#{useraddress,jdbcType=VARCHAR},
			</if>
			<if test="userjob != null">
				#{userjob,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<!-- 根据主键id动态修改 -->
	<update id="updateByPrimaryKeySelective" parameterType="sz.zxl.com.demo.pojo.Users">
		update users
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="userpwd != null">
				userpwd = #{userpwd,jdbcType=VARCHAR},
			</if>
			<if test="userage != null">
				userage = #{userage,jdbcType=INTEGER},
			</if>
			<if test="usersex != null">
				usersex = #{usersex,jdbcType=VARCHAR},
			</if>
			<if test="usercard != null">
				usercard = #{usercard,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="userphone != null">
				userphone = #{userphone,jdbcType=VARCHAR},
			</if>
			<if test="userphoto != null">
				userphoto = #{userphoto,jdbcType=VARCHAR},
			</if>
			<if test="useraddress != null">
				useraddress = #{useraddress,jdbcType=VARCHAR},
			</if>
			<if test="userjob != null">
				userjob = #{userjob,jdbcType=VARCHAR},
			</if>
		</set>
		where userid = #{userid,jdbcType=INTEGER}
	</update>
	<!-- 根据修改 -->
	<update id="updateByPrimaryKey" parameterType="sz.zxl.com.demo.pojo.Users">
		update users
		set username = #{username,jdbcType=VARCHAR},
		nickname = #{nickname,jdbcType=VARCHAR},
		userpwd = #{userpwd,jdbcType=VARCHAR},
		userage = #{userage,jdbcType=INTEGER},
		usersex = #{usersex,jdbcType=VARCHAR},
		usercard = #{usercard,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		userphone = #{userphone,jdbcType=VARCHAR},
		userphoto = #{userphoto,jdbcType=VARCHAR},
		useraddress = #{useraddress,jdbcType=VARCHAR},
		userjob = #{userjob,jdbcType=VARCHAR}
		where userid = #{userid,jdbcType=INTEGER}
	</update>
</mapper>